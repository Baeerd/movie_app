<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.comment.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.app.comment.entity.CommentVo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="r_movie_id" property="rMovieId" jdbcType="BIGINT" />

    <result column="part_name" property="partName" jdbcType="VARCHAR" />
    <result column="movie_name" property="movieName" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Base_Column_List" >
    id,created_dt,created_by,content,level,r_movie_id
  </sql>


  <insert id="insert" parameterType="com.app.comment.entity.Comment" >
    insert into comment (created_dt,created_by,
      content,level,r_movie_id)
    values (#{createdDt,jdbcType=TIMESTAMP},#{createdBy,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR},#{level,jdbcType=VARCHAR},#{rMovieId,jdbcType=BIGINT})
  </insert>

  <update id="update" parameterType="com.app.comment.entity.Comment" >
    update comment
      <set>
          <if test="id != null" >
              id = #{id,jdbcType=BIGINT},
          </if>
          <if test="createdDt != null" >
              created_dt = #{createdDt,jdbcType=TIMESTAMP},
          </if>
          <if test="createdBy != null" >
              created_by = #{createdBy,jdbcType=VARCHAR},
          </if>
          <if test="content != null" >
              content = #{content,jdbcType=VARCHAR},
          </if>
          <if test="level != null" >
              level = #{level,jdbcType=VARCHAR},
          </if>
          <if test="rMovieId != null" >
              r_movie_id = #{rMovieId,jdbcType=BIGINT},
          </if>
      </set>
  		where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="delete" parameterType="com.app.comment.entity.Comment" >
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <select id="find" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select
		<include refid="Base_Column_List" />
	from comment
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		      <if test="id != null" >
		        and id = #{id,jdbcType=BIGINT}
		      </if>
		      <if test="createdDt != null" >
		        and created_dt = #{createdDt,jdbcType=TIMESTAMP}
		      </if>
		      <if test="createdBy != null" >
		        and created_by = #{createdBy,jdbcType=VARCHAR}
		      </if>
		      <if test="content != null" >
		        and content = #{content,jdbcType=VARCHAR}
		      </if>
		      <if test="level != null" >
		        and level = #{level,jdbcType=VARCHAR}
		      </if>
		      <if test="rMovieId != null" >
		        and r_movie_id = #{rMovieId,jdbcType=BIGINT}
		      </if>
	      </trim>
	order by id desc
  </select>

    <select id="findCommentList" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT a.*, b.part_name, b.movie_name
        FROM COMMENT a JOIN v_movie b ON a.r_movie_id = b.id
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null" >
                and a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="createdDt != null" >
                and a.created_dt = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="createdBy != null" >
                and a.created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="content != null" >
                and a.content like '%${content}%'
            </if>
            <if test="level != null" >
                and a.level = #{level,jdbcType=VARCHAR}
            </if>
            <if test="rMovieId != null" >
                and a.r_movie_id = #{rMovieId,jdbcType=BIGINT}
            </if>
            <if test="partName != null" >
                and b.part_name like '%${partName}%'
            </if>
            <if test="movieName != null" >
                and b.movie_name like '%${movieName}%'
            </if>
            <if test="commentSearch != null">
                and (a.content like '%${commentSearch}%' or b.part_name like '%${commentSearch}%' or b.movie_name like '%${commentSearch}%')
            </if>
        </trim>
        order by id desc
    </select>

    <select id="findCommentListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(0)
        FROM COMMENT a JOIN v_movie b ON a.r_movie_id = b.id
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null" >
                and a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="createdDt != null" >
                and a.created_dt = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="createdBy != null" >
                and a.created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="content != null" >
                and a.content like '%${content}%'
            </if>
            <if test="level != null" >
                and a.level = #{level,jdbcType=VARCHAR}
            </if>
            <if test="rMovieId != null" >
                and a.r_movie_id = #{rMovieId,jdbcType=BIGINT}
            </if>
            <if test="partName != null" >
                and b.part_name like '%${partName}%'
            </if>
            <if test="movieName != null" >
                and b.movie_name like '%${movieName}%'
            </if>
            <if test="commentSearch != null">
                and (a.content like '%${commentSearch}%' or b.part_name like '%${commentSearch}%' or b.movie_name like '%${commentSearch}%')
            </if>
        </trim>
    </select>
</mapper>
